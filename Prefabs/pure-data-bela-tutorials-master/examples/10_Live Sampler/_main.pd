#N canvas 144 23 936 747 10;
#X obj 57 718 output~;
#X obj 57 540 playAudioFile~;
#X obj 632 523 recordAudioFile~;
#X obj 567 100 audioInput~;
#X text 569 67 audioInput;
#X text 735 66 start/stop Rec;
#X obj 197 101 analogInput2~;
#N canvas 0 22 450 300 signalToNumber 0;
#X obj 138 218 outlet;
#X obj 138 76 inlet~;
#X obj 203 126 metro 1;
#X obj 203 76 loadbang;
#X obj 203 102 delay 10;
#X obj 138 168 snapshot~;
#X connect 1 0 5 0;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 0 0;
#X restore 197 415 pd signalToNumber;
#X text 223 65 pitch;
#X msg 57 479 play;
#X msg 112 479 stop;
#X obj 57 101 analogInput1~;
#X text 55 66 play/stop playback;
#X obj 25 478 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 82 457 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 197 478 5 0 127 0 - - -;
#X obj 197 447 * 127;
#X obj 765 144 scope0~;
#X obj 67 145 scope1~;
#X obj 207 145 scope2~;
#X obj 519 470 *~ 1;
#X obj 592 146 scope3~;
#N canvas 351 23 693 741 if(x==1 0;
#X text 109 525 $i1;
#X text 182 526 $i2;
#X text 236 525 result;
#X obj 249 114 inlet;
#X obj 129 114 inlet;
#X text 108 89 audioInputFlag;
#X text 247 89 sensorFlag;
#X obj 276 717 outlet;
#X text 275 744 test result;
#X text 121 26 start rec if there's sound &&;
#X text 136 45 rec button is pressed;
#X obj 129 419 i 0;
#X obj 276 687 sel 1;
#X obj 276 358 i;
#X floatatom 276 446 5 0 0 0 - - -;
#X floatatom 129 446 5 0 0 0 - - -;
#X obj 129 292 t b 0 b;
#X obj 129 479 expr $i1 \; $i2 \; if($i1==1&&$i2==1 \, 1 \, 0) \;;
#X obj 303 603 - 1;
#X obj 174 114 abs;
#X obj 276 567 t 0 0;
#X obj 129 192 spigot 1;
#X text 350 624 invert result for using spigot as a gate;
#X text 350 644 test result = 1 gate close;
#X text 350 664 test result = 0 gate open;
#X text 351 604 stop consider audioInputFlag if the test was successful
;
#X text 86 688 output data only if result = 1;
#X obj 250 291 t 0 b b 0;
#X obj 159 336 sel 0;
#X msg 159 360 0;
#X text 335 294 first outlet on the left output a fake audioInputFlag
0;
#X text 335 314 the real audioInputFlag 0 has gone by the time the
signal dropped below the threshold and before realising the rec button
;
#X connect 3 0 27 0;
#X connect 4 0 21 0;
#X connect 11 0 15 0;
#X connect 12 0 7 0;
#X connect 13 0 14 0;
#X connect 14 0 17 1;
#X connect 15 0 17 0;
#X connect 16 0 11 0;
#X connect 16 1 11 1;
#X connect 16 2 13 0;
#X connect 17 2 20 0;
#X connect 18 0 19 0;
#X connect 19 0 21 1;
#X connect 20 0 12 0;
#X connect 20 1 18 0;
#X connect 21 0 16 0;
#X connect 27 0 28 0;
#X connect 27 1 11 0;
#X connect 27 2 13 0;
#X connect 27 3 13 1;
#X connect 28 0 29 0;
#X connect 29 0 11 0;
#X restore 590 347 pd if(x==1 && y==1) start;
#N canvas 0 23 539 575 startStopRec&Monitor 0;
#X obj 91 169 t b b;
#X obj 328 169 t b b;
#X obj 91 113 inlet;
#X text 57 83 start inlet;
#X obj 328 113 inlet;
#X text 326 83 stop inlet;
#X obj 91 290 outlet;
#X obj 321 290 outlet;
#X obj 148 291 outlet;
#X obj 388 290 outlet;
#X text 31 313 start monitoring;
#X text 309 313 start rec;
#X text 144 313 stop monitoring;
#X text 384 314 stop rec;
#X text 134 19 monitor audio input while recording;
#X text 134 39 stop monitoring during the playback;
#X obj 91 257 line;
#X obj 148 257 line;
#X msg 91 195 1 100;
#X msg 328 197 0 100;
#X connect 0 0 18 0;
#X connect 0 1 7 0;
#X connect 1 0 19 0;
#X connect 1 1 9 0;
#X connect 2 0 0 0;
#X connect 4 0 1 0;
#X connect 16 0 6 0;
#X connect 17 0 8 0;
#X connect 18 0 16 0;
#X connect 19 0 17 0;
#X restore 590 417 pd startStopRec&Monitor;
#X obj 519 239 *~ 1;
#X msg 567 289 1;
#X msg 622 289 0;
#X msg 737 290 1;
#X msg 792 290 0;
#X text 263 524 <-- this connection sends the fileName to be reproduced
;
#N canvas 0 22 450 300 rmsValue 0;
#X obj 73 41 inlet~;
#X text 143 71 bring signal into the positive range;
#X obj 73 80 env~;
#X obj 73 113 dbtorms;
#X obj 73 150 outlet;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X restore 567 184 pd rmsValue;
#X obj 737 183 lop~ 30;
#X obj 119 619 scope3~;
#X obj 109 591 analogInput3~;
#X obj 792 318 t 0 0;
#N canvas 0 22 450 300 echoB~ 0;
#X obj 94 42 inlet~;
#X obj 94 278 outlet~;
#N canvas 279 23 724 607 delayEngine 0;
#X obj 601 33 inlet;
#X obj 601 311 switch~;
#X obj 601 168 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 63 34 inlet~;
#X obj 64 311 outlet~;
#X obj 354 33 inlet;
#X floatatom 174 160 5 0 0 0 - - -;
#X text 171 138 Feedback;
#N canvas 477 55 612 380 timeDivision 0;
#X obj 68 207 * 1000;
#X obj 68 178 / 128;
#X msg 68 140 60;
#X obj 90 108 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 104 140 128;
#X obj 68 323 outlet;
#X obj 179 77 inlet;
#X floatatom 68 301 5 0 0 0 - - -;
#X obj 90 77 loadbang;
#X obj 67 250 i;
#X obj 114 234 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 35 28 Set audioDelay division according to the audioLoop bpm
;
#X obj 179 216 t b 0;
#X obj 68 278 * 0.05;
#X connect 0 0 9 0;
#X connect 0 0 9 1;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 3 0 4 0;
#X connect 4 0 1 1;
#X connect 6 0 12 0;
#X connect 7 0 5 0;
#X connect 8 0 3 0;
#X connect 9 0 13 0;
#X connect 10 0 9 0;
#X connect 12 0 10 0;
#X connect 12 1 13 1;
#X connect 13 0 7 0;
#X restore 354 168 pd timeDivision;
#X floatatom 354 239 5 0 0 0 - - -;
#X text 57 12 Audio Input;
#X text 310 8 Control Time Division;
#X text 549 7 Turn audioDelay DSP on/off;
#X obj 63 99 delwrite~ delayB 1000;
#X obj 64 253 delread~ delayB 1000;
#X obj 141 182 *~ 0.7;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X connect 3 0 13 0;
#X connect 5 0 8 0;
#X connect 6 0 15 1;
#X connect 8 0 9 0;
#X connect 9 0 14 0;
#X connect 14 0 4 0;
#X connect 14 0 15 0;
#X connect 15 0 13 0;
#X restore 119 131 pd delayEngine;
#X floatatom 401 117 5 0 0 0 - - -;
#N canvas 705 210 450 568 DryWet 0;
#X obj 55 45 inlet~;
#X obj 90 428 outlet~;
#X obj 135 45 inlet~;
#X obj 225 45 inlet~;
#X obj 135 211 *~;
#X obj 90 389 +~;
#X obj 55 211 *~;
#X obj 70 160 -~;
#X text 54 18 DRY INPUT;
#X text 135 18 WET INPUT;
#X text 223 18 CONTROL INPUT;
#X obj 70 119 sig~ 1;
#X text 271 117 arbitrary value to scale the control input;
#X obj 225 115 *~ 0.5;
#X floatatom 179 208 5 0 0 0 - - -;
#X obj 135 238 hip~ 250;
#X obj 135 291 *~;
#X obj 132 328 *~ 2;
#X obj 219 237 osc~ 6;
#X connect 0 0 6 0;
#X connect 2 0 4 0;
#X connect 3 0 13 0;
#X connect 4 0 15 0;
#X connect 5 0 1 0;
#X connect 6 0 5 0;
#X connect 7 0 6 1;
#X connect 11 0 7 0;
#X connect 13 0 7 1;
#X connect 13 0 4 1;
#X connect 14 0 15 1;
#X connect 15 0 16 0;
#X connect 16 0 17 0;
#X connect 17 0 5 1;
#X connect 18 0 16 1;
#X restore 94 220 pd DryWet;
#X text 66 16 Audio input;
#X text 204 16 Control Input;
#X floatatom 401 44 5 0 0 0 - - -;
#X text 381 15 timeDivision \; 0.25 = default;
#X obj 201 42 inlet~;
#X floatatom 159 103 5 0 0 0 - - -;
#X obj 143 42 loadbang;
#X msg 155 75 0.2;
#X obj 201 72 setSensorThreshold~;
#X connect 0 0 2 0;
#X connect 0 0 4 0;
#X connect 2 0 4 1;
#X connect 3 0 2 1;
#X connect 4 0 1 0;
#X connect 7 0 3 0;
#X connect 9 0 13 0;
#X connect 10 0 2 1;
#X connect 11 0 12 0;
#X connect 12 0 10 0;
#X connect 13 0 2 2;
#X connect 13 1 2 2;
#X connect 13 2 4 2;
#X restore 58 651 pd echoB~;
#N canvas 271 37 450 300 digitalInput0 0;
#X obj 250 121 s bela_setDigital;
#X obj 250 30 loadbang;
#X obj 250 58 delay 50;
#X obj 77 120 outlet~;
#X obj 77 29 adc~ 11;
#X msg 250 90 in 11 ~;
#X connect 1 0 2 0;
#X connect 2 0 5 0;
#X connect 4 0 3 0;
#X connect 5 0 0 0;
#X restore 737 99 pd digitalInput0;
#X obj 737 239 setSensorThreshold~;
#X obj 57 416 setSensorThreshold~;
#N canvas 0 22 1276 754 micThreshold~ 0;
#X msg 307 335 set \$1 \$2 \$3 \$4;
#X obj 307 482 outlet;
#X obj 307 174 inlet;
#X obj 133 172 inlet~;
#X obj 454 482 outlet;
#X text 256 508 SENSOR TOUCHED output;
#X text 445 507 SENSOR RELEASED output;
#X text 100 149 SENSOR SIGNAL Input;
#X text 269 147 TOUCH THRESHOLD Input;
#X obj 628 483 outlet~;
#X obj 133 425 *~ 1;
#X obj 628 441 *~ 1;
#X obj 454 402 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 255 66 It also detects RELEASED SENSOR events;
#X obj 307 403 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 169 41 This patch detects a TOUCHED SENSOR event according
to a TOUCH THRESHOLD, f 70;
#X text 624 507 UNMODIFIED SENSOR SIGNAL output;
#X obj 307 245 t 0 0;
#X obj 381 274 - 0.1;
#X text 423 273 release threshold = touch threshold - 0.1;
#X obj 307 303 pack 0.05 50 0.01 50;
#X obj 307 369 threshold~ 0.025 50 0.01 50;
#X connect 0 0 21 0;
#X connect 2 0 17 0;
#X connect 3 0 10 0;
#X connect 3 0 21 0;
#X connect 10 0 11 0;
#X connect 11 0 9 0;
#X connect 12 0 4 0;
#X connect 14 0 1 0;
#X connect 17 0 20 0;
#X connect 17 1 18 0;
#X connect 18 0 20 2;
#X connect 20 0 0 0;
#X connect 21 0 14 0;
#X connect 21 1 12 0;
#X restore 567 238 pd micThreshold~;
#X text 53 7 LIVE SAMPLER;
#X text 53 24 This patch records an audio signal \, stores it \, and
then triggers its playback. An additional sensor changes the playback
speed (pitch).;
#X connect 1 0 35 0;
#X connect 2 0 1 4;
#X connect 3 0 24 0;
#X connect 3 0 30 0;
#X connect 3 0 21 0;
#X connect 6 0 7 0;
#X connect 6 0 19 0;
#X connect 7 0 16 0;
#X connect 9 0 1 0;
#X connect 10 0 1 1;
#X connect 11 0 18 0;
#X connect 11 0 38 0;
#X connect 15 0 1 3;
#X connect 16 0 15 0;
#X connect 20 0 0 0;
#X connect 20 0 2 0;
#X connect 22 0 23 0;
#X connect 23 0 20 1;
#X connect 23 1 20 1;
#X connect 23 2 2 1;
#X connect 23 3 2 2;
#X connect 24 0 20 0;
#X connect 25 0 22 0;
#X connect 26 0 22 0;
#X connect 27 0 22 1;
#X connect 28 0 34 0;
#X connect 30 0 39 0;
#X connect 31 0 37 0;
#X connect 33 0 35 1;
#X connect 33 0 32 0;
#X connect 34 0 22 1;
#X connect 34 1 23 1;
#X connect 35 0 0 0;
#X connect 36 0 17 0;
#X connect 36 0 31 0;
#X connect 37 0 27 0;
#X connect 37 1 28 0;
#X connect 38 0 9 0;
#X connect 38 0 13 0;
#X connect 38 1 10 0;
#X connect 38 1 14 0;
#X connect 39 0 25 0;
#X connect 39 1 26 0;
